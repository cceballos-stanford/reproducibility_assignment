head(data)
colnames(data)
m1 <- aov(Y ~ A * B * C, data = tidy_data)
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. I also got rid of empty columns. I removed the "mean" row. I also removed the two top columsn.
# I'll read in the new data.
data_m <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
articleID <- "6-1-2015" # insert the article ID code here e.g., "10-3-2015"
reportType <- "Pilot" # specify whether this is the 'pilot' report or 'copilot' report
pilotNames <- "Cristina Ceballos" # insert the pilot's name here e.g., "Tom Hardwicke".
copilotNames <- "Insub Kim" # # insert the co-pilot's name here e.g., "Michael Frank".
pilotTTC <- 120 # insert the pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
copilotTTC <- NA # insert the co-pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
pilotStartDate <- "11/3/2019" # insert the piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
copilotStartDate <- NA # insert the co-piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
completionDate <- NA # insert the date of final report completion in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
# sets up some formatting options for the R Markdown document
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
# load packages
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
library(ReproReports) # custom reporting functions
library(foreign)
# Prepare report object. This will be updated automatically by the reproCheck function each time values are compared
reportObject <- data.frame(dummyRow = TRUE, reportedValue = NA, obtainedValue = NA, valueType = NA, percentageError = NA, comparisonOutcome = NA, eyeballCheck = NA)
data <- read_excel("GroupA_6-1-2015/data/data_Exp1.xlsx", sheet = "summary")
head(data)
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. I also got rid of empty columns. I removed the "mean" row. I also removed the two top columsn.
# I'll read in the new data.
data_m <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_m, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
m1 <- aov(Y ~ A * B * C, data = tidy_data)
m1 <- aov("estimate" ~ "grasping_estimating" * "crowded_uncrowded" * "open_closed" * "cm", data = tidy_data)
m1 <- aov("estimate" ~ "grasping_estimating" * "crowded_uncrowded" * "open_closed" * "cm", tidy_data)
articleID <- "6-1-2015" # insert the article ID code here e.g., "10-3-2015"
reportType <- "Pilot" # specify whether this is the 'pilot' report or 'copilot' report
pilotNames <- "Cristina Ceballos" # insert the pilot's name here e.g., "Tom Hardwicke".
copilotNames <- "Insub Kim" # # insert the co-pilot's name here e.g., "Michael Frank".
pilotTTC <- 120 # insert the pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
copilotTTC <- NA # insert the co-pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
pilotStartDate <- "11/3/2019" # insert the piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
copilotStartDate <- NA # insert the co-piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
completionDate <- NA # insert the date of final report completion in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
# sets up some formatting options for the R Markdown document
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
# load packages
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
library(ReproReports) # custom reporting functions
library(foreign)
# Prepare report object. This will be updated automatically by the reproCheck function each time values are compared
reportObject <- data.frame(dummyRow = TRUE, reportedValue = NA, obtainedValue = NA, valueType = NA, percentageError = NA, comparisonOutcome = NA, eyeballCheck = NA)
data <- read_excel("GroupA_6-1-2015/data/data_Exp1.xlsx", sheet = "summary")
head(data)
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. I also got rid of empty columns. I removed the "mean" row. I also removed the two top columsn.
# I'll read in the new data.
data_m <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_m, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
# I have already pre-processed my data, when I tidied it. It is now ready to use.
m1 <- aov("estimate" ~ "grasping_estimating" * "crowded_uncrowded" * "open_closed" * "cm", tidy_data)
m1 <- aov("estimate" ~ "grasping_estimating" * "crowded_uncrowded" * "open_closed" * "cm")
m1 <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, data = tidy_data)
m1 <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, data = tidy_data)
ANOVA_results <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, data = tidy_data)
Summary(ANOVA_results)
ANOVA_results <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, data = tidy_data)
summary(ANOVA_results)
articleID <- "6-1-2015" # insert the article ID code here e.g., "10-3-2015"
reportType <- "Pilot" # specify whether this is the 'pilot' report or 'copilot' report
pilotNames <- "Cristina Ceballos" # insert the pilot's name here e.g., "Tom Hardwicke".
copilotNames <- "Insub Kim" # # insert the co-pilot's name here e.g., "Michael Frank".
pilotTTC <- 120 # insert the pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
copilotTTC <- NA # insert the co-pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
pilotStartDate <- "11/3/2019" # insert the piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
copilotStartDate <- NA # insert the co-piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
completionDate <- NA # insert the date of final report completion in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
# sets up some formatting options for the R Markdown document
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
# load packages
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
library(ReproReports) # custom reporting functions
library(foreign)
# Prepare report object. This will be updated automatically by the reproCheck function each time values are compared
reportObject <- data.frame(dummyRow = TRUE, reportedValue = NA, obtainedValue = NA, valueType = NA, percentageError = NA, comparisonOutcome = NA, eyeballCheck = NA)
data <- read_excel("GroupA_6-1-2015/data/data_Exp1.xlsx", sheet = "summary")
head(data)
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. I also got rid of empty columns. I removed the "mean" row. I also removed the two top columsn.
# I'll read in the new data.
data_m <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_m, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
# I have already pre-processed my data, when I tidied it. It is now ready to use.
ANOVA_results <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, data = tidy_data)
summary(ANOVA_results)
# I have already pre-processed my data, when I tidied it. It is now ready to use.
View(tidy_data)
data <- read_excel("GroupA_6-1-2015/data/data_Exp1.xlsx", sheet = "summary")
head(data)
articleID <- "6-1-2015" # insert the article ID code here e.g., "10-3-2015"
reportType <- "Pilot" # specify whether this is the 'pilot' report or 'copilot' report
pilotNames <- "Cristina Ceballos" # insert the pilot's name here e.g., "Tom Hardwicke".
copilotNames <- "Insub Kim" # # insert the co-pilot's name here e.g., "Michael Frank".
pilotTTC <- 120 # insert the pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
copilotTTC <- NA # insert the co-pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
pilotStartDate <- "11/3/2019" # insert the piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
copilotStartDate <- NA # insert the co-piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
completionDate <- NA # insert the date of final report completion in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
# sets up some formatting options for the R Markdown document
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
# load packages
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
library(ReproReports) # custom reporting functions
library(foreign)
# Prepare report object. This will be updated automatically by the reproCheck function each time values are compared
reportObject <- data.frame(dummyRow = TRUE, reportedValue = NA, obtainedValue = NA, valueType = NA, percentageError = NA, comparisonOutcome = NA, eyeballCheck = NA)
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. I also got rid of empty columns. I removed the "mean" row. I also removed the two top columns.
# I use the read_excel function to read the data.
data_m <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_m, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
# I have already pre-processed my data, when I tidied it. It is now ready to use.
View(tidy_data)
# I tried running a four-way repeated measures ANOVA, as the authors did.
ANOVA_results <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, data = tidy_data)
summary(ANOVA_results)
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. I also got rid of empty columns. I removed the "mean" row. I also removed the two top columns.
# I use the read_excel function to read the data.
data_m <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_m, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
# I tried running a four-way repeated measures ANOVA, as the authors did.
ANOVA_results <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, data = tidy_data)
summary(ANOVA_results)
# I used the aov function to
ANOVA_results <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, tidy_data)
summary(ANOVA_results)
# I used the aov function to
ANOVA_results <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, data = tidy_data)
summary(ANOVA_results)
# I used the aov function to
ANOVA_results <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, tidy_data)
summary(ANOVA_results)
?reproCheck
# Reprocheck for the four-way ANOVA:
reproCheck(6.818, 2.662)
# Reprocheck for the four-way ANOVA:
reproCheck(6.818, 2.662, valueType = "F")
# Reprocheck for the four-way ANOVA:
reproCheck("6.818", "2.662", valueType = "F")
# Reprocheck for the four-way ANOVA F value:
reproCheck("6.818", "2.662", valueType = "F")
# Reprocheck for the four-way ANOVA p value:
reproCheck("0.28", "0.105", valueType = "p")
# Reprocheck for the four-way ANOVA F value:
reproCheck("6.818", "2.662", valueType = "F")
# Reprocheck for the four-way ANOVA p value:
reproCheck("0.28", "0.105", valueType = "p")
reportObject <- reportObject %>%
filter(dummyRow == FALSE) %>% # remove the dummy row
select(-dummyRow) %>% # remove dummy row designation
mutate(articleID = articleID) %>% # add variables to report
select(articleID, everything()) # make articleID first column
# decide on final outcome
if(any(reportObject$comparisonOutcome %in% c("MAJOR_ERROR", "DECISION_ERROR"))){
finalOutcome <- "Failure"
}else{
finalOutcome <- "Success"
}
# collate report extra details
reportExtras <- data.frame(articleID, pilotNames, copilotNames, pilotTTC, copilotTTC, pilotStartDate, copilotStartDate, completionDate, finalOutcome)
# save report objects
if(reportType == "pilot"){
write_csv(reportObject, "pilotReportDetailed.csv")
write_csv(reportExtras, "pilotReportExtras.csv")
}
if(reportType == "copilot"){
write_csv(reportObject, "copilotReportDetailed.csv")
write_csv(reportExtras, "copilotReportExtras.csv")
}
# I used the aov function to
ANOVA_results <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, tidy_data)
summary(ANOVA_results)
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. To do so, I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. For example, the first column was called "closedloop_grasping_uncrowded_3cm". The other columns followed the same naming rules.
# In the Excel file, I also deleted empty columns. I also removed the two top columns.
# I use the read_excel function to read the data.
data_m <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_m, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
# I have already pre-processed my data, when I tidied it. It is now ready to use.
# I used the aov function to
ANOVA_results <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, tidy_data)
summary(ANOVA_results)
View(data_m)
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. To do so, I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. For example, the first column was called "closedloop_grasping_uncrowded_3cm". The other columns followed the same naming rules.
# In the Excel file, I also deleted empty columns. I also removed the two top columns.
# I use the read_excel function to read the data.
data_modified <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
View(data_m)
# Next, I got rid of the "mean" row, since I should not use it in the ANOVA
data_modified_nomeans <- data_modified[1:10]
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_modified, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. To do so, I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. For example, the first column was called "closedloop_grasping_uncrowded_3cm". The other columns followed the same naming rules.
# In the Excel file, I also deleted empty columns. I also removed the two top columns.
# I use the read_excel function to read the data.
data_modified <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Next, I got rid of the "mean" row, since I should not use it in the ANOVA
data_modified_nomeans <- data_modified[1:10]
View(data_modified_nomeans)
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_modified, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. To do so, I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. For example, the first column was called "closedloop_grasping_uncrowded_3cm". The other columns followed the same naming rules.
# In the Excel file, I also deleted empty columns. I also removed the two top columns.
# I use the read_excel function to read the data.
data_modified <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Next, I got rid of the "mean" row, since I should not use it in the ANOVA
data_modified_nomeans <- data_modified[1:10,]
View(data_modified_nomeans)
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_modified, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. To do so, I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. For example, the first column was called "closedloop_grasping_uncrowded_3cm". The other columns followed the same naming rules.
# In the Excel file, I also deleted empty columns. I also removed the two top columns.
# I use the read_excel function to read the data.
data_modified <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Next, I got rid of the "mean" row, since I should not use it in the ANOVA
data_modified_nomeans <- data_modified[1:10,]
View(data_modified_nomeans)
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_modified_nomeans, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
articleID <- "6-1-2015" # insert the article ID code here e.g., "10-3-2015"
reportType <- "Pilot" # specify whether this is the 'pilot' report or 'copilot' report
pilotNames <- "Cristina Ceballos" # insert the pilot's name here e.g., "Tom Hardwicke".
copilotNames <- "Insub Kim" # # insert the co-pilot's name here e.g., "Michael Frank".
pilotTTC <- 120 # insert the pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
copilotTTC <- NA # insert the co-pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
pilotStartDate <- "11/3/2019" # insert the piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
copilotStartDate <- NA # insert the co-piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
completionDate <- NA # insert the date of final report completion in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
# sets up some formatting options for the R Markdown document
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
# load packages
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
library(ReproReports) # custom reporting functions
library(foreign)
# Prepare report object. This will be updated automatically by the reproCheck function each time values are compared
reportObject <- data.frame(dummyRow = TRUE, reportedValue = NA, obtainedValue = NA, valueType = NA, percentageError = NA, comparisonOutcome = NA, eyeballCheck = NA)
data <- read_excel("GroupA_6-1-2015/data/data_Exp1.xlsx", sheet = "summary")
head(data)
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. To do so, I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. For example, the first column was called "closedloop_grasping_uncrowded_3cm". The other columns followed the same naming rules.
# In the Excel file, I also deleted empty columns. I also removed the two top columns.
# I use the read_excel function to read the data.
data_modified <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Next, I got rid of the "mean" row, since I should not use it in the ANOVA
data_modified_nomeans <- data_modified[1:10,]
View(data_modified_nomeans)
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_modified_nomeans, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
articleID <- "6-1-2015" # insert the article ID code here e.g., "10-3-2015"
reportType <- "Pilot" # specify whether this is the 'pilot' report or 'copilot' report
pilotNames <- "Cristina Ceballos" # insert the pilot's name here e.g., "Tom Hardwicke".
copilotNames <- "Insub Kim" # # insert the co-pilot's name here e.g., "Michael Frank".
pilotTTC <- 120 # insert the pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
copilotTTC <- NA # insert the co-pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
pilotStartDate <- "11/3/2019" # insert the piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
copilotStartDate <- NA # insert the co-piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
completionDate <- NA # insert the date of final report completion in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
# sets up some formatting options for the R Markdown document
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
# load packages
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
library(ReproReports) # custom reporting functions
library(foreign)
# Prepare report object. This will be updated automatically by the reproCheck function each time values are compared
reportObject <- data.frame(dummyRow = TRUE, reportedValue = NA, obtainedValue = NA, valueType = NA, percentageError = NA, comparisonOutcome = NA, eyeballCheck = NA)
data <- read_excel("GroupA_6-1-2015/data/data_Exp1.xlsx", sheet = "summary")
head(data)
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. To do so, I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. For example, the first column was called "closedloop_grasping_uncrowded_3cm". The other columns followed the same naming rules.
# In the Excel file, I also deleted empty columns. I also removed the two top columns.
# I use the read_excel function to read the data.
data_modified <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Next, I got rid of the "mean" row, since I should not use it in the ANOVA
data_modified_nomeans <- data_modified[1:10,]
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_modified_nomeans, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
# I have already pre-processed my data, when I tidied it. It is now ready to use.
# I used the aov function to
ANOVA_results <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, tidy_data)
summary(ANOVA_results)
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. To do so, I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. For example, the first column was called "closedloop_grasping_uncrowded_3cm". The other columns followed the same naming rules.
# In the Excel file, I also deleted empty columns. I also removed the two top columns.
# I use the read_excel function to read the data.
data_modified <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_modified, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
View(tidy_data)
# To run the ANOVA, I should get rid of the "means" information in the tidy_data. To do that, I simply selected the first 160 rows of the dataset, and ommitted the bottom rows 161-176, since those are the rows that have the means.
ANOVA_tidy_data <- tidy_data[1:160,]
View(ANOVA_tidy_data)
# To run the ANOVA, I should get rid of the "means" information in the tidy_data. To do that, I simply selected the first 160 rows of the dataset, and ommitted the bottom rows 161-176, since those are the rows that have the means.
ANOVA_tidy_data <- tidy_data[1:160,]
View(ANOVA_tidy_data) # This is the dataset I will use for the ANOVA analysis.
# Next, I created a dataset that has ONLY the "means" information, since that is the information used in Figure 3.
Fig3_tidy_data <- tidy_data[160:176,]
View(Fig3_tidy_data)
# To run the ANOVA, I should get rid of the "means" information in the tidy_data. To do that, I simply selected the first 160 rows of the dataset, and ommitted the bottom rows 161-176, since those are the rows that have the means.
ANOVA_tidy_data <- tidy_data[1:160,]
View(ANOVA_tidy_data) # This is the dataset I will use for the ANOVA analysis.
# Next, I created a dataset that has ONLY the "means" information, since that is the information used in Figure 3.
Fig3_tidy_data <- tidy_data[161:176,]
View(Fig3_tidy_data)
# To run the ANOVA, I should get rid of the "means" information in the tidy_data. To do that, I simply selected the first 160 rows of the dataset, and ommitted the bottom rows 161-176, since those are the rows that have the means.
ANOVA_tidy_data <- tidy_data[1:160,]
# "ANOVA_tidy_data is the dataset I will use for the ANOVA analysis. It excludes the "means" rows.
# Next, I created a dataset that has ONLY the "means" information, since that is the information used in Figure 3.
Fig3_tidy_data <- tidy_data[161:176,]
# "Fig3_tidy_data is the dataset I will use for try to recreate Fig3 from the paper. It has only the "means" rows.
# I used the aov function to
ANOVA_results <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, ANOVA_tidy_data)
summary(ANOVA_results)
Fig3_tidy_data
plot(Fig3_tidy_data, "l")
plot(Fig3_tidy_data,  "l")
?plot
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. To do so, I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. For example, the first column was called "closedloop_grasping_uncrowded_3cm". The other columns followed the same naming rules.
# In the Excel file, I also deleted empty columns. I also removed the two top columns.
# I use the read_excel function to read the data.
data_modified <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_modified, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
colnames(Fig3_tidy_data)
colnames(Fig3_tidy_data)
plot("cm", "estimation" Fig3_tidy_data,  "l")
colnames(Fig3_tidy_data)
plot(cm, estimation, Fig3_tidy_data,  "l")
colnames(Fig3_tidy_data)
plot("cm", Fig3_tidy_data[10:16], Fig3_tidy_data,  "l")
colnames(Fig3_tidy_data)
# plot("cm", Fig3_tidy_data[10:16], Fig3_tidy_data,  "l")
# commented out because I could not get the code to work
# Reprocheck for the four-way ANOVA F value:
reproCheck("6.818", "2.662", valueType = "F")
# Reprocheck for the four-way ANOVA p value:
reproCheck("0.28", "0.105", valueType = "p")
articleID <- "6-1-2015" # insert the article ID code here e.g., "10-3-2015"
reportType <- "Pilot" # specify whether this is the 'pilot' report or 'copilot' report
pilotNames <- "Cristina Ceballos" # insert the pilot's name here e.g., "Tom Hardwicke".
copilotNames <- "Insub Kim" # insert the co-pilot's name here e.g., "Michael Frank".
pilotTTC <-  500 insert the pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
articleID <- "6-1-2015" # insert the article ID code here e.g., "10-3-2015"
reportType <- "Pilot" # specify whether this is the 'pilot' report or 'copilot' report
pilotNames <- "Cristina Ceballos" # insert the pilot's name here e.g., "Tom Hardwicke".
copilotNames <- "Insub Kim" # insert the co-pilot's name here e.g., "Michael Frank".
pilotTTC <-  "500" insert the pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
setwd("C:/Users/C. Ceballos/Desktop/PSYCH 251/Problem Set 3")
setwd("C:/Users/C. Ceballos/Desktop/PSYCH 251/Problem Set 3")
setwd("C:/Users/C. Ceballos/Desktop/PSYCH 251/Problem Set 3")
articleID <- "6-1-2015" # insert the article ID code here e.g., "10-3-2015"
reportType <- "Pilot" # specify whether this is the 'pilot' report or 'copilot' report
pilotNames <- "Cristina Ceballos" # insert the pilot's name here e.g., "Tom Hardwicke".
copilotNames <- "Insub Kim" # # insert the co-pilot's name here e.g., "Michael Frank".
pilotTTC <- 520 # insert the pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
copilotTTC <- NA # insert the co-pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
pilotStartDate <- "11/3/2019" # insert the piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
copilotStartDate <- NA # insert the co-piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
completionDate <- NA # insert the date of final report completion in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
articleID <- "6-1-2015" # insert the article ID code here e.g., "10-3-2015"
reportType <- "Pilot" # specify whether this is the 'pilot' report or 'copilot' report
pilotNames <- "Cristina Ceballos" # insert the pilot's name here e.g., "Tom Hardwicke".
copilotNames <- "Insub Kim" # # insert the co-pilot's name here e.g., "Michael Frank".
pilotTTC <- 520 # insert the pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
copilotTTC <- NA # insert the co-pilot's estimated time to complete (in minutes, it is fine to approximate) e.g., 120
pilotStartDate <- "11/3/2019" # insert the piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
copilotStartDate <- NA # insert the co-piloting start date in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
completionDate <- NA # insert the date of final report completion in US format e.g., as.Date("01/25/18", format = "%m/%d/%y")
# sets up some formatting options for the R Markdown document
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
# load packages
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
library(ReproReports) # custom reporting functions
library(foreign)
# Prepare report object. This will be updated automatically by the reproCheck function each time values are compared
reportObject <- data.frame(dummyRow = TRUE, reportedValue = NA, obtainedValue = NA, valueType = NA, percentageError = NA, comparisonOutcome = NA, eyeballCheck = NA)
data <- read_excel("GroupA_6-1-2015/data/data_Exp1.xlsx", sheet = "summary")
head(data)
# Right now, the data is arranged in wide format. I want to make it longer, so I will use pivot_longer to make it tidy.
# But first, I have to manually modify the columns and assign each column a column name. To do so, I created a new Excel file called "data_Exp1_modified". In this Excel file, I manually renamed each column. For example, the first column was called "closedloop_grasping_uncrowded_3cm". The other columns followed the same naming rules.
# In the Excel file, I also deleted empty columns. I also removed the two top columns.
# I use the read_excel function to read the data.
data_modified <- read_excel("GroupA_6-1-2015/data/data_Exp1_modified.xlsx", sheet = "summary")
# Now I use the functions "separate" and "pivot_longer" to make my data tidy.
pivoted_data <- pivot_longer(data_modified, closedloop_grasping_uncrowded_3cm:openloop_estimation_crowded_3.75cm, names_to = "column", values_to="estimate")
tidy_data <- separate(pivoted_data, column, into = c("open_closed","grasping_estimating","crowded_uncrowded","cm"), sep = "_")
colnames(tidy_data)
# Now my data is tidy!
# To run the ANOVA, I should get rid of the "means" information in the tidy_data. To do that, I simply selected the first 160 rows of the dataset, and ommitted the bottom rows 161-176, since those are the rows that have the means.
ANOVA_tidy_data <- tidy_data[1:160,]
# "ANOVA_tidy_data is the dataset I will use for the ANOVA analysis. It excludes the "means" rows.
# Next, I created a dataset that has ONLY the "means" information, since that is the information used in Figure 3.
Fig3_tidy_data <- tidy_data[161:176,]
# "Fig3_tidy_data is the dataset I will use for try to recreate Fig3 from the paper. It has only the "means" rows.
# I used the aov function to
ANOVA_results <- aov(estimate ~ grasping_estimating * crowded_uncrowded * open_closed * cm, ANOVA_tidy_data)
summary(ANOVA_results)
colnames(Fig3_tidy_data)
# plot("cm", Fig3_tidy_data[10:16], Fig3_tidy_data,  "l")
# commented out because I could not get the code to work
# Reprocheck for the four-way ANOVA F value:
reproCheck("6.818", "2.662", valueType = "F")
# Reprocheck for the four-way ANOVA p value:
reproCheck("0.28", "0.105", valueType = "p")
reportObject <- reportObject %>%
filter(dummyRow == FALSE) %>% # remove the dummy row
select(-dummyRow) %>% # remove dummy row designation
mutate(articleID = articleID) %>% # add variables to report
select(articleID, everything()) # make articleID first column
# decide on final outcome
if(any(reportObject$comparisonOutcome %in% c("MAJOR_ERROR", "DECISION_ERROR"))){
finalOutcome <- "Failure"
}else{
finalOutcome <- "Success"
}
# collate report extra details
reportExtras <- data.frame(articleID, pilotNames, copilotNames, pilotTTC, copilotTTC, pilotStartDate, copilotStartDate, completionDate, finalOutcome)
# save report objects
if(reportType == "pilot"){
write_csv(reportObject, "pilotReportDetailed.csv")
write_csv(reportExtras, "pilotReportExtras.csv")
}
if(reportType == "copilot"){
write_csv(reportObject, "copilotReportDetailed.csv")
write_csv(reportExtras, "copilotReportExtras.csv")
}
devtools::session_info()
setwd("C:/Users/C. Ceballos/Desktop/PSYCH 251/Problem Set 3")
git status
